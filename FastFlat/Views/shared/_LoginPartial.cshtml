@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var currentPage = (string)ViewContext.RouteData.Values["page"]!;
}


<ul class="--nav-tabs">
    @if (SignInManager.IsSignedIn(User) && UserManager.GetUserAsync(User).Result != null)
    {
        <li class="nav-item">
            <span style="vertical-align: middle;">Hello @UserManager.GetUserName(User)!</span>
        </li>
        <li class="nav-item icon">
            
               @{ var user = await UserManager.GetUserAsync(User);

                @if (user.ProfilePicture != null)
                {
                    <img style="width:40px;height:40px; object-fit:cover; border-radius:25px; cursor: pointer;"
                         src="data:image/*;base64,@(Convert.ToBase64String(user.ProfilePicture))"
                         onclick="openMenu()">
                }
            }
        

            <partial name="_Dropdown" />
        </li>
    }
    else
    {
        <li class="nav-registerLogin">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register" class="@(currentPage == "/Account/Register" ? "active" : "")">Register</a>
        </li>
        <li class="nav-registerLogin">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login" class="@(currentPage == "/Account/Login" ? "active" : "")">Login</a>
        </li>
    }
</ul>


<script>
    function openMenu() {
        // Your JavaScript code for opening the menu goes here
        // For example, you can toggle a CSS class to show/hide the menu
        let dropdownMenu = document.getElementById('hideAndOpen');
        dropdownMenu.classList.toggle('transform-menu');
    }
</script>