@using FastFlat.ViewModels

@model NewListningViewModel

@section Styles {
    <link rel="stylesheet" href="~/css/newlisting.css" />
}
<div class="container">
    <h2>Create New Listning</h2>

    <form asp-action="NewListning" method="post" enctype="multipart/form-data" id="form">
        <div class="form-group">
            <label asp-for="Listning.ListningName"></label><span class="text-danger">*</span>
            <input asp-for="Listning.ListningName" class="form-control" />
            <span asp-validation-for="Listning.ListningName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Listning.ListningPrice"></label><span class="text-danger">*</span>
            <input asp-for="Listning.ListningPrice" class="form-control" />
            <span asp-validation-for="Listning.ListningPrice" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="ListningImage">Listning Image:</label>
            <input type="file" accept=".png,.jpg,.jpeg" id="ListningImage" multiple="false" name="ListningImage" class="form-control-file">
            <span asp-validation-for="Listning.ListningImageURL" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Listning.FromDate">Available From</label><span class="text-danger">*</span>
            <input asp-for="Listning.FromDate" id="fromDateInput" type="date" class="form-control" value="2023-09-30" />
            <span asp-validation-for="Listning.FromDate" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Listning.ToDate">Available To</label><span class="text-danger">*</span>
            <input asp-for="Listning.ToDate" id="toDateInput" type="date" class="form-control" value="2023-10-30" />
            <span asp-validation-for="Listning.ToDate" class="text-danger"></span>
        </div>
        
        <div class="form-group">
            <label asp-for="Listning.ListningDescription"></label>
            <input asp-for="Listning.ListningDescription" class="form-control" />
            <span asp-validation-for="Listning.ListningDescription" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Listning.ListningAddress">Address</label>
            <input asp-for="Listning.ListningAddress" class="form-control" />
            <span asp-validation-for="Listning.ListningAddress" class="text-danger"></span>
        </div>
        <div class="form-group city">
            <label asp-for="Listning.ListningCity">Choose city</label>
            <input asp-for="Listning.ListningCity" id="location"class="form-control" />
            <span asp-validation-for="Listning.ListningCity" class="text-danger"></span>
            <div id="output"></div>
        </div>
        <div class="form-group">
            <label asp-for="Listning.SquareMeter"></label>
            <input asp-for="Listning.SquareMeter" class="form-control" />
            <span asp-validation-for="Listning.SquareMeter" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Listning.NoOfBeds"></label>
            <input asp-for="Listning.NoOfBeds" class="form-control" />
            <span asp-validation-for="Listning.NoOfBeds" class="text-danger"></span>
        </div>
       
        

        <h4>Select Amenities:</h4>

        @foreach (var amenity in Model.Amenities)
        {
            <input type="checkbox" name="SelectedAmenities" value="@amenity.AmenityId" /> @amenity.AmenityName
            

            <br />
        }
        <button type="submit" class="btn btn-primary">Create</button>
        <span asp-validation-for="SelectedAmenities" class="text-danger"></span>
    </form>
</div>

<script>
    document.getElementById('fromDateInput').addEventListener('change', function() {
        const selectedDate = this.value;
        document.getElementById('toDateInput').setAttribute('min', selectedDate);
    });
    const cityInput = $('#location');
    const cityOutput = document.getElementById('output');
    let cityArray = []

    function updateLocation(city) {
        cityOutput.innerHTML = ' '
        console.log(city)
        cityInput.val(city)
    }

    cityInput.keyup(async () => {
        cityArray = []
        if (cityInput.val().length < 3) {
            cityOutput.innerHTML = ' '
            return
        }
        try {
            const response = await fetch('/api/city-search?keyword=' + encodeURIComponent(cityInput.val()) + '&max=10');

            if (!response.ok) {
                console.error('Failed to fetch cities:', response.statusText);
                return;
            }

            const data = await response.json();
            cityArray = data.data
            // Clearing previous output, if desired
            output.innerHTML = '';

            if (Array.isArray(cityArray)) {
                cityArray.slice(0, 4).forEach(city => {
                    output.innerHTML += `<button type="button" onclick="updateLocation('${city.name}')"><strong>${city.name}</strong>, ${city.address.countryCode}</button>`;
                });
            } else {
                console.error('Data is not an array:', data);
            }
        } catch (error) {
            console.error('Error occurred:', error);
        }
    });
    

    document.getElementById('form').addEventListener('keydown', function (event) {
        if (event.key === "Enter") {
            console.log(event.key)
            event.preventDefault();
        }
    });
</script>