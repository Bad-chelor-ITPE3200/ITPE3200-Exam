// <auto-generated />
using System;
using ExamITPE3200.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamITPE3200.Migrations
{
    [DbContext(typeof(FastFlatDbContext))]
    partial class FastFlatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("ExamITPE3200.Models.BookingModel", b =>
                {
                    b.Property<int>("bookingModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ListingModellistingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("bookingName")
                        .HasColumnType("TEXT");

                    b.Property<string>("dates")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("renterModelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("bookingModelId");

                    b.HasIndex("ListingModellistingId");

                    b.HasIndex("renterModelId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ExamITPE3200.Models.CityModel", b =>
                {
                    b.Property<int>("CityModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("cityName")
                        .HasColumnType("TEXT");

                    b.Property<string>("country")
                        .HasColumnType("TEXT");

                    b.HasKey("CityModelId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ExamITPE3200.Models.ContryModel", b =>
                {
                    b.Property<int>("ContryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contryname")
                        .HasColumnType("TEXT");

                    b.HasKey("ContryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ExamITPE3200.Models.LandlordModel", b =>
                {
                    b.Property<int>("landlordModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("rating")
                        .HasColumnType("REAL");

                    b.HasKey("landlordModelId");

                    b.ToTable("Landlord");
                });

            modelBuilder.Entity("ExamITPE3200.Models.ListingModel", b =>
                {
                    b.Property<int>("listingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("area")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("available")
                        .HasColumnType("INTEGER");

                    b.Property<string>("city")
                        .HasColumnType("TEXT");

                    b.Property<string>("listingName")
                        .HasColumnType("TEXT");

                    b.Property<int>("noOfBeds")
                        .HasColumnType("INTEGER");

                    b.Property<float>("rating")
                        .HasColumnType("REAL");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("listingId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("ExamITPE3200.Models.RenterModel", b =>
                {
                    b.Property<int>("renterModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("renterModelId");

                    b.ToTable("Renters");
                });

            modelBuilder.Entity("ExamITPE3200.Models.UserModel", b =>
                {
                    b.Property<int>("UserModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("profilePicture")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserModelId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamITPE3200.Models.BookingModel", b =>
                {
                    b.HasOne("ExamITPE3200.Models.ListingModel", null)
                        .WithMany("bookings")
                        .HasForeignKey("ListingModellistingId");

                    b.HasOne("ExamITPE3200.Models.RenterModel", null)
                        .WithMany("bookings")
                        .HasForeignKey("renterModelId");
                });

            modelBuilder.Entity("ExamITPE3200.Models.ListingModel", b =>
                {
                    b.Navigation("bookings");
                });

            modelBuilder.Entity("ExamITPE3200.Models.RenterModel", b =>
                {
                    b.Navigation("bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
